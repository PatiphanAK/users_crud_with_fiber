users:
  get:
    tags:
      - user
    summary: Get all users with pagination
    operationId: getUsers
    parameters:
      - in: query
        name: limit
        schema:
          type: integer
          minimum: 1
          default: 10
        description: Maximum number of users to return per page
      - in: query
        name: offset
        schema:
          type: integer
          minimum: 0
          default: 0
        description: The starting index of the first user to return
    responses:
      '200':
        description: Successful response with paginated users
        headers:
          X-Total-Count:
            description: Total number of users available
            schema:
              type: integer
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '../schemas/user.yaml#/User'
  post:
    tags:
      - user
    summary: Create a user
    operationId: createUser
    parameters:
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: email
        schema:
          type: string
    responses:
      '201':
        description: Successful create user

users_id:
  get:
    tags:
      - user
    summary: Get a specific user by ID
    operationId: getUserById
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: The ID of the user to retrieve
    responses:
      '200':
        description: Successful response with the user data
        content:
          application/json:
            schema:
              $ref: '../schemas/user.yaml#/User'
      '404':
        description: User not found
  patch:
    tags:
      - user
    summary: Update a specific user by ID
    operationId: updateUser
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: The ID of the user to update
      - in: query
        name: name
        schema:
          type: string
        description: The updated name of the user
      - in: query
        name: email
        schema:
          type: string
        description: The updated email of the user
    responses:
      '200':
        description: Successful update of the user
      '404':
        description: User not found
  delete:
    tags:
      - user
    summary: Delete a specific user by ID
    operationId: deleteUser
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: The ID of the user to delete
    responses:
      '200':
        description: Successful deletion of the user
      '404':
        description: User not found